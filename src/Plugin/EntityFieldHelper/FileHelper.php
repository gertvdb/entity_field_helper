<?php

namespace Drupal\entity_field_helper\Plugin\EntityFieldHelper;

use Drupal\file\FileInterface;

/**
 * Provides a General Entity Field Helper for File fields.
 *
 * @EntityFieldHelper(
 *   id = "file",
 *   name = "File",
 * )
 */
class FileHelper extends ReferenceHelper {

  /**
   * Get the relative file url for the given file.
   *
   * @param \Drupal\file\FileInterface $file
   *   The file entity.
   *
   * @return string
   *   Relative File Url with the specified settings.
   */
  public function getUrl(FileInterface $file) {
    $absoluteUrl = $this->getAbsoluteUrl($file);
    return $absoluteUrl ? $this->fileUrlTransformRelative($absoluteUrl) : $absoluteUrl;
  }

  /**
   * Get the absolute file url for the given file.
   *
   * @param \Drupal\file\FileInterface $file
   *   The file entity.
   *
   * @return string
   *   Absolute File Url with the specified settings.
   */
  public function getAbsoluteUrl(FileInterface $file) {
    $uri = $file->getFileUri();
    if (!$uri) {
      return FALSE;
    }

    return $this->fileCreateUrl($uri);
  }

  /**
   * Wrap file_create_url for unit testing purposes.
   *
   * @param string $uri
   *   The URI to a file for which we need an
   *   external URL, or the path to a shipped file.
   *
   * @return string
   *   A string containing a URL that may be used
   *   to access the file. If the provided string already
   *   contains a preceding 'http', 'https', or '/', nothing
   *   is done and the same string is returned. If a stream
   *   wrapper could not be found to generate an external URL,
   *   then FALSE is returned.
   */
  protected function fileCreateUrl($uri) {
    return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
  }

  /**
   * Wrap file_create_url for unit testing purposes.
   *
   * @param string $fileUrl
   *   A file URL of a local file as generated by file_create_url().
   *
   * @return string
   *   If the file URL indeed pointed to a local file and was indeed
   *   absolute, then the transformed, relative URL to the local file.
   *   Otherwise: the original value of $file_url.
   */
  protected function fileUrlTransformRelative($fileUrl) {
    return \Drupal::service('file_url_generator')->transformRelative($fileUrl);
  }

}
